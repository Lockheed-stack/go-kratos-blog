// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v4.24.3
// source: api/articles/articles.proto

package articles

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DetailArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt string `protobuf:"bytes,1,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,2,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Desc      string `protobuf:"bytes,4,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Content   string `protobuf:"bytes,5,opt,name=Content,proto3" json:"Content,omitempty"`
	PageView  uint32 `protobuf:"varint,6,opt,name=PageView,proto3" json:"PageView,omitempty"`
	Img       string `protobuf:"bytes,7,opt,name=Img,proto3" json:"Img,omitempty"`
	ID        uint64 `protobuf:"varint,8,opt,name=ID,proto3" json:"ID,omitempty"`
	Uid       uint64 `protobuf:"varint,9,opt,name=Uid,proto3" json:"Uid,omitempty"`
	Cid       uint64 `protobuf:"varint,10,opt,name=Cid,proto3" json:"Cid,omitempty"`
}

func (x *DetailArticleInfo) Reset() {
	*x = DetailArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailArticleInfo) ProtoMessage() {}

func (x *DetailArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailArticleInfo.ProtoReflect.Descriptor instead.
func (*DetailArticleInfo) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{0}
}

func (x *DetailArticleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DetailArticleInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *DetailArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DetailArticleInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DetailArticleInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DetailArticleInfo) GetPageView() uint32 {
	if x != nil {
		return x.PageView
	}
	return 0
}

func (x *DetailArticleInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *DetailArticleInfo) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *DetailArticleInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DetailArticleInfo) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

type CreateArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Cid      uint64 `protobuf:"varint,2,opt,name=Cid,proto3" json:"Cid,omitempty"`
	Desc     string `protobuf:"bytes,3,opt,name=Desc,proto3" json:"Desc,omitempty"`
	Content  string `protobuf:"bytes,4,opt,name=Content,proto3" json:"Content,omitempty"`
	Img      string `protobuf:"bytes,5,opt,name=Img,proto3" json:"Img,omitempty"`
	PageView uint32 `protobuf:"varint,6,opt,name=PageView,proto3" json:"PageView,omitempty"`
	Uid      uint64 `protobuf:"varint,7,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *CreateArticlesRequest) Reset() {
	*x = CreateArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticlesRequest) ProtoMessage() {}

func (x *CreateArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticlesRequest.ProtoReflect.Descriptor instead.
func (*CreateArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{1}
}

func (x *CreateArticlesRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticlesRequest) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *CreateArticlesRequest) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *CreateArticlesRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticlesRequest) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *CreateArticlesRequest) GetPageView() uint32 {
	if x != nil {
		return x.PageView
	}
	return 0
}

func (x *CreateArticlesRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CreateArticlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *CreateArticlesReply) Reset() {
	*x = CreateArticlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticlesReply) ProtoMessage() {}

func (x *CreateArticlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticlesReply.ProtoReflect.Descriptor instead.
func (*CreateArticlesReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{2}
}

func (x *CreateArticlesReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateArticlesReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetArticlesInSameCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize uint32 `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum  uint32 `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	CID      uint64 `protobuf:"varint,3,opt,name=CID,proto3" json:"CID,omitempty"`
}

func (x *GetArticlesInSameCategoryRequest) Reset() {
	*x = GetArticlesInSameCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesInSameCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesInSameCategoryRequest) ProtoMessage() {}

func (x *GetArticlesInSameCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesInSameCategoryRequest.ProtoReflect.Descriptor instead.
func (*GetArticlesInSameCategoryRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{3}
}

func (x *GetArticlesInSameCategoryRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetArticlesInSameCategoryRequest) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetArticlesInSameCategoryRequest) GetCID() uint64 {
	if x != nil {
		return x.CID
	}
	return 0
}

type GetArticlesInSameCategoryReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedArticles []*DetailArticleInfo `protobuf:"bytes,1,rep,name=SelectedArticles,proto3" json:"SelectedArticles,omitempty"`
	Total            uint32               `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Code             uint32               `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetArticlesInSameCategoryReply) Reset() {
	*x = GetArticlesInSameCategoryReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesInSameCategoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesInSameCategoryReply) ProtoMessage() {}

func (x *GetArticlesInSameCategoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesInSameCategoryReply.ProtoReflect.Descriptor instead.
func (*GetArticlesInSameCategoryReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{4}
}

func (x *GetArticlesInSameCategoryReply) GetSelectedArticles() []*DetailArticleInfo {
	if x != nil {
		return x.SelectedArticles
	}
	return nil
}

func (x *GetArticlesInSameCategoryReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetArticlesInSameCategoryReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetArticlesByCidAndUidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize uint32 `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum  uint32 `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
	CID      uint64 `protobuf:"varint,3,opt,name=CID,proto3" json:"CID,omitempty"`
	UID      uint64 `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *GetArticlesByCidAndUidRequest) Reset() {
	*x = GetArticlesByCidAndUidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesByCidAndUidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesByCidAndUidRequest) ProtoMessage() {}

func (x *GetArticlesByCidAndUidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesByCidAndUidRequest.ProtoReflect.Descriptor instead.
func (*GetArticlesByCidAndUidRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{5}
}

func (x *GetArticlesByCidAndUidRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetArticlesByCidAndUidRequest) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetArticlesByCidAndUidRequest) GetCID() uint64 {
	if x != nil {
		return x.CID
	}
	return 0
}

func (x *GetArticlesByCidAndUidRequest) GetUID() uint64 {
	if x != nil {
		return x.UID
	}
	return 0
}

type GetArticlesByCidAndUidReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedArticles []*DetailArticleInfo `protobuf:"bytes,1,rep,name=SelectedArticles,proto3" json:"SelectedArticles,omitempty"`
	Total            uint32               `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	Code             uint32               `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetArticlesByCidAndUidReply) Reset() {
	*x = GetArticlesByCidAndUidReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticlesByCidAndUidReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticlesByCidAndUidReply) ProtoMessage() {}

func (x *GetArticlesByCidAndUidReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticlesByCidAndUidReply.ProtoReflect.Descriptor instead.
func (*GetArticlesByCidAndUidReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{6}
}

func (x *GetArticlesByCidAndUidReply) GetSelectedArticles() []*DetailArticleInfo {
	if x != nil {
		return x.SelectedArticles
	}
	return nil
}

func (x *GetArticlesByCidAndUidReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetArticlesByCidAndUidReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetRecommendArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageSize uint32 `protobuf:"varint,1,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
	PageNum  uint32 `protobuf:"varint,2,opt,name=PageNum,proto3" json:"PageNum,omitempty"`
}

func (x *GetRecommendArticlesRequest) Reset() {
	*x = GetRecommendArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendArticlesRequest) ProtoMessage() {}

func (x *GetRecommendArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendArticlesRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{7}
}

func (x *GetRecommendArticlesRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetRecommendArticlesRequest) GetPageNum() uint32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

type GetRecommendArticlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedArticles []*DetailArticleInfo `protobuf:"bytes,1,rep,name=SelectedArticles,proto3" json:"SelectedArticles,omitempty"`
	Code             uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetRecommendArticlesReply) Reset() {
	*x = GetRecommendArticlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendArticlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendArticlesReply) ProtoMessage() {}

func (x *GetRecommendArticlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendArticlesReply.ProtoReflect.Descriptor instead.
func (*GetRecommendArticlesReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{8}
}

func (x *GetRecommendArticlesReply) GetSelectedArticles() []*DetailArticleInfo {
	if x != nil {
		return x.SelectedArticles
	}
	return nil
}

func (x *GetRecommendArticlesReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetRandomArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint32 `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
}

func (x *GetRandomArticlesRequest) Reset() {
	*x = GetRandomArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomArticlesRequest) ProtoMessage() {}

func (x *GetRandomArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomArticlesRequest.ProtoReflect.Descriptor instead.
func (*GetRandomArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{9}
}

func (x *GetRandomArticlesRequest) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetRandomArticlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SelectedArticles []*DetailArticleInfo `protobuf:"bytes,1,rep,name=SelectedArticles,proto3" json:"SelectedArticles,omitempty"`
	Code             uint32               `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetRandomArticlesReply) Reset() {
	*x = GetRandomArticlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRandomArticlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRandomArticlesReply) ProtoMessage() {}

func (x *GetRandomArticlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRandomArticlesReply.ProtoReflect.Descriptor instead.
func (*GetRandomArticlesReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{10}
}

func (x *GetRandomArticlesReply) GetSelectedArticles() []*DetailArticleInfo {
	if x != nil {
		return x.SelectedArticles
	}
	return nil
}

func (x *GetRandomArticlesReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

type GetSingleArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID uint64 `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
}

func (x *GetSingleArticleRequest) Reset() {
	*x = GetSingleArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleArticleRequest) ProtoMessage() {}

func (x *GetSingleArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleArticleRequest.ProtoReflect.Descriptor instead.
func (*GetSingleArticleRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{11}
}

func (x *GetSingleArticleRequest) GetArticleID() uint64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type GetSingleArticleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article *DetailArticleInfo `protobuf:"bytes,1,opt,name=Article,proto3" json:"Article,omitempty"`
	Code    uint32             `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg     string             `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *GetSingleArticleReply) Reset() {
	*x = GetSingleArticleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSingleArticleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleArticleReply) ProtoMessage() {}

func (x *GetSingleArticleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleArticleReply.ProtoReflect.Descriptor instead.
func (*GetSingleArticleReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{12}
}

func (x *GetSingleArticleReply) GetArticle() *DetailArticleInfo {
	if x != nil {
		return x.Article
	}
	return nil
}

func (x *GetSingleArticleReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSingleArticleReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleInfo *DetailArticleInfo `protobuf:"bytes,1,opt,name=ArticleInfo,proto3" json:"ArticleInfo,omitempty"`
}

func (x *UpdateArticlesRequest) Reset() {
	*x = UpdateArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticlesRequest) ProtoMessage() {}

func (x *UpdateArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticlesRequest.ProtoReflect.Descriptor instead.
func (*UpdateArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateArticlesRequest) GetArticleInfo() *DetailArticleInfo {
	if x != nil {
		return x.ArticleInfo
	}
	return nil
}

type UpdateArticlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *UpdateArticlesReply) Reset() {
	*x = UpdateArticlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticlesReply) ProtoMessage() {}

func (x *UpdateArticlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticlesReply.ProtoReflect.Descriptor instead.
func (*UpdateArticlesReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateArticlesReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateArticlesReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateArticlesPageviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pageview map[uint32]uint32 `protobuf:"bytes,1,rep,name=Pageview,proto3" json:"Pageview,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *UpdateArticlesPageviewRequest) Reset() {
	*x = UpdateArticlesPageviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticlesPageviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticlesPageviewRequest) ProtoMessage() {}

func (x *UpdateArticlesPageviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticlesPageviewRequest.ProtoReflect.Descriptor instead.
func (*UpdateArticlesPageviewRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateArticlesPageviewRequest) GetPageview() map[uint32]uint32 {
	if x != nil {
		return x.Pageview
	}
	return nil
}

type UpdateArticlesPageviewReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *UpdateArticlesPageviewReply) Reset() {
	*x = UpdateArticlesPageviewReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticlesPageviewReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticlesPageviewReply) ProtoMessage() {}

func (x *UpdateArticlesPageviewReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticlesPageviewReply.ProtoReflect.Descriptor instead.
func (*UpdateArticlesPageviewReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateArticlesPageviewReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateArticlesPageviewReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteArticlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID uint64 `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
}

func (x *DeleteArticlesRequest) Reset() {
	*x = DeleteArticlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticlesRequest) ProtoMessage() {}

func (x *DeleteArticlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticlesRequest.ProtoReflect.Descriptor instead.
func (*DeleteArticlesRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteArticlesRequest) GetArticleID() uint64 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type DeleteArticlesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *DeleteArticlesReply) Reset() {
	*x = DeleteArticlesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteArticlesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteArticlesReply) ProtoMessage() {}

func (x *DeleteArticlesReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteArticlesReply.ProtoReflect.Descriptor instead.
func (*DeleteArticlesReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteArticlesReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeleteArticlesReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckExistenceOfBlogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID uint32 `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
}

func (x *CheckExistenceOfBlogRequest) Reset() {
	*x = CheckExistenceOfBlogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckExistenceOfBlogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistenceOfBlogRequest) ProtoMessage() {}

func (x *CheckExistenceOfBlogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistenceOfBlogRequest.ProtoReflect.Descriptor instead.
func (*CheckExistenceOfBlogRequest) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{19}
}

func (x *CheckExistenceOfBlogRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type CheckExistenceOfBlogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Existence bool   `protobuf:"varint,1,opt,name=Existence,proto3" json:"Existence,omitempty"`
	Code      uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Msg       string `protobuf:"bytes,3,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *CheckExistenceOfBlogReply) Reset() {
	*x = CheckExistenceOfBlogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_articles_articles_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckExistenceOfBlogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckExistenceOfBlogReply) ProtoMessage() {}

func (x *CheckExistenceOfBlogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_articles_articles_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckExistenceOfBlogReply.ProtoReflect.Descriptor instead.
func (*CheckExistenceOfBlogReply) Descriptor() ([]byte, []int) {
	return file_api_articles_articles_proto_rawDescGZIP(), []int{20}
}

func (x *CheckExistenceOfBlogReply) GetExistence() bool {
	if x != nil {
		return x.Existence
	}
	return false
}

func (x *CheckExistenceOfBlogReply) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckExistenceOfBlogReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_api_articles_articles_proto protoreflect.FileDescriptor

var file_api_articles_articles_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x11,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x10, 0x0a,
	0x03, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x49, 0x6d, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x43, 0x69, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x49, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x22, 0x6a, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x43, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x43, 0x49, 0x44, 0x22, 0x97, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x61,
	0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x4b, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x79, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x69, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x43, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x43, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x55, 0x49,
	0x44, 0x22, 0x94, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x42, 0x79, 0x43, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x7c, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x79, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x37, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x44, 0x22, 0x78, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x07, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5a, 0x0a, 0x15, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3b, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x22, 0xb3, 0x01, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x3b, 0x0a,
	0x0d, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x1b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22,
	0x35, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x3b, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x22, 0x3b, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x22, 0x5f, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x63, 0x65, 0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73,
	0x67, 0x32, 0x92, 0x08, 0x0a, 0x08, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x58,
	0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x70, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x67, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x58, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x79,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x53,
	0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x53, 0x61, 0x6d, 0x65, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x70, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43, 0x69, 0x64, 0x41, 0x6e, 0x64,
	0x55, 0x69, 0x64, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x79,
	0x43, 0x69, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x42, 0x79, 0x43, 0x69, 0x64,
	0x41, 0x6e, 0x64, 0x55, 0x69, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x5e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x61, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x52, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x6a, 0x0a, 0x14, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x6c,
	0x6f, 0x67, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65,
	0x4f, 0x66, 0x42, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x45, 0x78, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x6c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x1c, 0x5a, 0x1a, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x3b, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_articles_articles_proto_rawDescOnce sync.Once
	file_api_articles_articles_proto_rawDescData = file_api_articles_articles_proto_rawDesc
)

func file_api_articles_articles_proto_rawDescGZIP() []byte {
	file_api_articles_articles_proto_rawDescOnce.Do(func() {
		file_api_articles_articles_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_articles_articles_proto_rawDescData)
	})
	return file_api_articles_articles_proto_rawDescData
}

var file_api_articles_articles_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_api_articles_articles_proto_goTypes = []any{
	(*DetailArticleInfo)(nil),                // 0: api.articles.DetailArticleInfo
	(*CreateArticlesRequest)(nil),            // 1: api.articles.CreateArticlesRequest
	(*CreateArticlesReply)(nil),              // 2: api.articles.CreateArticlesReply
	(*GetArticlesInSameCategoryRequest)(nil), // 3: api.articles.GetArticlesInSameCategoryRequest
	(*GetArticlesInSameCategoryReply)(nil),   // 4: api.articles.GetArticlesInSameCategoryReply
	(*GetArticlesByCidAndUidRequest)(nil),    // 5: api.articles.GetArticlesByCidAndUidRequest
	(*GetArticlesByCidAndUidReply)(nil),      // 6: api.articles.GetArticlesByCidAndUidReply
	(*GetRecommendArticlesRequest)(nil),      // 7: api.articles.GetRecommendArticlesRequest
	(*GetRecommendArticlesReply)(nil),        // 8: api.articles.GetRecommendArticlesReply
	(*GetRandomArticlesRequest)(nil),         // 9: api.articles.GetRandomArticlesRequest
	(*GetRandomArticlesReply)(nil),           // 10: api.articles.GetRandomArticlesReply
	(*GetSingleArticleRequest)(nil),          // 11: api.articles.GetSingleArticleRequest
	(*GetSingleArticleReply)(nil),            // 12: api.articles.GetSingleArticleReply
	(*UpdateArticlesRequest)(nil),            // 13: api.articles.UpdateArticlesRequest
	(*UpdateArticlesReply)(nil),              // 14: api.articles.UpdateArticlesReply
	(*UpdateArticlesPageviewRequest)(nil),    // 15: api.articles.UpdateArticlesPageviewRequest
	(*UpdateArticlesPageviewReply)(nil),      // 16: api.articles.UpdateArticlesPageviewReply
	(*DeleteArticlesRequest)(nil),            // 17: api.articles.DeleteArticlesRequest
	(*DeleteArticlesReply)(nil),              // 18: api.articles.DeleteArticlesReply
	(*CheckExistenceOfBlogRequest)(nil),      // 19: api.articles.CheckExistenceOfBlogRequest
	(*CheckExistenceOfBlogReply)(nil),        // 20: api.articles.CheckExistenceOfBlogReply
	nil,                                      // 21: api.articles.UpdateArticlesPageviewRequest.PageviewEntry
}
var file_api_articles_articles_proto_depIdxs = []int32{
	0,  // 0: api.articles.GetArticlesInSameCategoryReply.SelectedArticles:type_name -> api.articles.DetailArticleInfo
	0,  // 1: api.articles.GetArticlesByCidAndUidReply.SelectedArticles:type_name -> api.articles.DetailArticleInfo
	0,  // 2: api.articles.GetRecommendArticlesReply.SelectedArticles:type_name -> api.articles.DetailArticleInfo
	0,  // 3: api.articles.GetRandomArticlesReply.SelectedArticles:type_name -> api.articles.DetailArticleInfo
	0,  // 4: api.articles.GetSingleArticleReply.Article:type_name -> api.articles.DetailArticleInfo
	0,  // 5: api.articles.UpdateArticlesRequest.ArticleInfo:type_name -> api.articles.DetailArticleInfo
	21, // 6: api.articles.UpdateArticlesPageviewRequest.Pageview:type_name -> api.articles.UpdateArticlesPageviewRequest.PageviewEntry
	1,  // 7: api.articles.Articles.CreateArticles:input_type -> api.articles.CreateArticlesRequest
	13, // 8: api.articles.Articles.UpdateArticles:input_type -> api.articles.UpdateArticlesRequest
	15, // 9: api.articles.Articles.UpdateArticlesPageview:input_type -> api.articles.UpdateArticlesPageviewRequest
	17, // 10: api.articles.Articles.DeleteArticles:input_type -> api.articles.DeleteArticlesRequest
	3,  // 11: api.articles.Articles.GetArticlesInSameCategory:input_type -> api.articles.GetArticlesInSameCategoryRequest
	5,  // 12: api.articles.Articles.GetArticlesByCidAndUid:input_type -> api.articles.GetArticlesByCidAndUidRequest
	11, // 13: api.articles.Articles.GetSingleArticle:input_type -> api.articles.GetSingleArticleRequest
	7,  // 14: api.articles.Articles.GetRecommendArticles:input_type -> api.articles.GetRecommendArticlesRequest
	9,  // 15: api.articles.Articles.GetRandomArticles:input_type -> api.articles.GetRandomArticlesRequest
	19, // 16: api.articles.Articles.CheckExistenceOfBlog:input_type -> api.articles.CheckExistenceOfBlogRequest
	2,  // 17: api.articles.Articles.CreateArticles:output_type -> api.articles.CreateArticlesReply
	14, // 18: api.articles.Articles.UpdateArticles:output_type -> api.articles.UpdateArticlesReply
	16, // 19: api.articles.Articles.UpdateArticlesPageview:output_type -> api.articles.UpdateArticlesPageviewReply
	18, // 20: api.articles.Articles.DeleteArticles:output_type -> api.articles.DeleteArticlesReply
	4,  // 21: api.articles.Articles.GetArticlesInSameCategory:output_type -> api.articles.GetArticlesInSameCategoryReply
	6,  // 22: api.articles.Articles.GetArticlesByCidAndUid:output_type -> api.articles.GetArticlesByCidAndUidReply
	12, // 23: api.articles.Articles.GetSingleArticle:output_type -> api.articles.GetSingleArticleReply
	8,  // 24: api.articles.Articles.GetRecommendArticles:output_type -> api.articles.GetRecommendArticlesReply
	10, // 25: api.articles.Articles.GetRandomArticles:output_type -> api.articles.GetRandomArticlesReply
	20, // 26: api.articles.Articles.CheckExistenceOfBlog:output_type -> api.articles.CheckExistenceOfBlogReply
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_articles_articles_proto_init() }
func file_api_articles_articles_proto_init() {
	if File_api_articles_articles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_articles_articles_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*DetailArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*CreateArticlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesInSameCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesInSameCategoryReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesByCidAndUidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetArticlesByCidAndUidReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetRecommendArticlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetRandomArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*GetRandomArticlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*GetSingleArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetSingleArticleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateArticlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateArticlesPageviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateArticlesPageviewReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteArticlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteArticlesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*CheckExistenceOfBlogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_articles_articles_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CheckExistenceOfBlogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_articles_articles_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_articles_articles_proto_goTypes,
		DependencyIndexes: file_api_articles_articles_proto_depIdxs,
		MessageInfos:      file_api_articles_articles_proto_msgTypes,
	}.Build()
	File_api_articles_articles_proto = out.File
	file_api_articles_articles_proto_rawDesc = nil
	file_api_articles_articles_proto_goTypes = nil
	file_api_articles_articles_proto_depIdxs = nil
}
