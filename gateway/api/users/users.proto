syntax = "proto3";

package api.users;

option go_package = "user/api/users;users";


service Users {
	rpc CreateUsers (CreateUsersRequest) returns (CreateUsersReply);
	rpc UpdateUsers (UpdateUsersRequest) returns (UpdateUsersReply);
	rpc DeleteUsers (DeleteUsersRequest) returns (DeleteUsersReply);
	rpc GetSelectedUsers (GetSelectedUsersRequest) returns (GetSelectedUsersReply);
	rpc ListUsers (ListUsersRequest) returns (ListUsersReply);
	rpc AuthUsers (AuthUsersRequest) returns (AuthUsersReply);
	rpc GetUserStatisticsInfo(GetStatisticsRequest)returns(GetStatisticsReply);
}

message UserPublicInfo {
	string Username = 1;
	string Avatar = 2;
	string SelfDesc = 3;
	uint64 ID = 4;
}
message StatisticsInfo{
	uint64 TotalLoginDays = 1;
	uint64 TotalBlogs = 2;
	uint64 TotalPageviews = 3;
	uint64 TotalUniqueviews = 4;
}

message CreateUsersRequest {
	string UserName = 1;
	string Password = 2;
}
message CreateUsersReply {
	string Msg = 1;
	uint32 Code = 2;
}

message UpdateUsersRequest {}
message UpdateUsersReply {}

message DeleteUsersRequest {
	uint64 ID = 1;
}
message DeleteUsersReply {
	string Msg = 1;
	uint32 Code = 2;
}

message GetSelectedUsersRequest {
	repeated uint64 UsersID = 1;
}
message GetSelectedUsersReply {
	repeated UserPublicInfo SelectedUsers = 1;
	uint32 Code = 2;
}

message ListUsersRequest {}
message ListUsersReply {}


message AuthUsersRequest {
	string UserName = 1;
	string Password = 2;
}
message AuthUsersReply{
	string Msg = 1;
	uint32 Code = 2;
	UserPublicInfo SelectedUser = 3;
}

message GetStatisticsRequest{
	uint64 ID = 1;
}
message GetStatisticsReply{
	StatisticsInfo Info = 1;
	uint32 Code = 2;
	string Msg = 3;
}